/*
 * Copyright (c) 2009-2015 Samsung Electronics Co., Ltd All Rights Reserved
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

group {
    name: "app_main_ly";
	parts {
		CU_PART_SPACER( "bg",
			description { state: "default" 0.0; }
		)
		CU_PART_SWALLOW( "elm.swallow.content",
			description { state: "default" 0.0; }
		)
		CU_PART_SWALLOW( "action_bar",
			clip_to: "keypadarea.clipper";
			description { state: "default" 0.0;
				rel1{ relative: ACTION_BAR_LAYOUT_L ACTION_BAR_LAYOUT_T; }
				rel2{ relative: ACTION_BAR_LAYOUT_R ACTION_BAR_LAYOUT_B; }
				align: 0.5 0.0;
			}
		)
		CU_PART_SPACER( "keypadarea.clipper.maximized",
			description { state: "default" 0.0;
				rel1.relative: 0.0 1.0;
				min: 0 EC_END_CALL_BTN_AREA_PAD_BOTTOM_MAX;
				fixed: 0 1;
				align: 0 1;
			}
		)

		CU_PART_PADDING_TOP_NAME("keypadarea.clipper.minimized", EC_LAYOUT_MINIMIZE_SIZE)

		CU_PART_RECT( "keypadarea.clipper",
			mouse_events: 0;
			repeat_events: 1;
			description { state: "default" 0.0;
				rel2 { relative: 1.0 0.0; to: "keypadarea.clipper.maximized"; }
			}
			description { state: "maximize" 0.0;
				inherit: "default" 0.0;
			}
			description { state: "minimize" 0.0;
				inherit: "default" 0.0;
				rel1 { relative: 0.0 0.0; to: "keypadarea.clipper.minimized"; }
				rel2 { relative: 1.0 1.0; to: "keypadarea.clipper.minimized"; }
			}
		)
		CU_PART_SWALLOW( PART_SWALLOW_KEYPAD_LAYOUT_AREA,
			clip_to: "keypadarea.clipper";
			description {
				state: "default" 0.0;
				rel1 { relative: 0.0 0.0; to: "keypadarea.clipper"; }
				rel2 { relative: 1.0 1.0; to: "keypadarea.clipper"; }
			}
		)
	}
	programs {
		program { name: "anim_minimize_main_clipper";
			action: STATE_SET "minimize" 0.0;
			transition: LINEAR EC_ANIM_DUR;
			target: "keypadarea.clipper";
		}
		program { name: "anim_maximize_main_clipper";
			action: STATE_SET "maximize" 0.0;
			transition: LINEAR EC_ANIM_DUR;
			target: "keypadarea.clipper";
		}
		program { name: "maximize_main_clipper";
			action: STATE_SET "maximize" 0.0;
			target: "keypadarea.clipper";
		}
		program { name: "minimize";
			signal: "minimize";
			source: "app_main_ly";
			after: "anim_minimize_main_clipper";
		}
		program { name: "maximize";
			signal: "maximize";
			source: "app_main_ly";
			after: "anim_maximize_main_clipper";
		}
		program { name: "maximize_no_anim";
			signal: "maximize_no_anim";
			source: "app_main_ly";
			after: "maximize_main_clipper";
		}
	}
}

group {
    name: "main_ly";
	parts {
		part { name: "background";
			type: IMAGE;
			description {
				state: "default" 0.0;
				image.normal: IMG_SRC_DIR/"background.png";
			}
		}
		part { name: "call_txt_status";
			type: TEXT;
			scale: 1;
			description {
				state: "default" 0.0;
				rel1 { relative: CALLER_INFO_STATUS_L CALLER_INFO_STATUS_T; to: "background"; }
				rel2 { relative: CALLER_INFO_STATUS_R CALLER_INFO_STATUS_B; to: "background"; }
				fixed: 1 1;
				text {
					align: 0 0.5;
					text_class: "ATO001";
				}
				align: 0 0.5;
				color_class: "ATO001";
			}
		}

		part { name: "caller_info_rect";
			type: SPACER;
			scale: 1;
			description {
				state: "default" 0.0;
				rel1 { relative: CALLER_INFO_L CALLER_INFO_T; to: "background";}
				rel2 { relative: CALLER_INFO_R CALLER_INFO_B; to: "background";}
			}
		}

		part { name: "caller_info";
			type: SWALLOW;
			scale: 1;
			description {
				state: "default" 0.0;
				visible: 1;
				rel1 { relative: 0.0 0.0; to: "caller_info_rect";}
				rel2 { relative: 1.0 1.0; to: "caller_info_rect";}
			}
			description {
				state: "show" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
			description {
				state: "hide" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}

		part { name: "circle_btn_area";
			type: RECT;
			scale: 1;
			description {
				state: "default" 0.0;
				rel1{ relative: 0.0 1.0; to: "caller_info_rect";}
				rel2{ relative: 1.0 1.0;}
				min: MTLOCK_ACCEPT_CIRCLE_RECT_WIDTH MTLOCK_ACCEPT_CIRCLE_RECT_HEIGHT;
				color: 255 255 255 255;
				align: 0.5 0.0;
			}
		}

		part { name: "end_btn_area";
			type: RECT;
			scale: 1;
			description {
				state: "default" 0.0;
				rel1.relative: ENDCALL_BTN_BG_L ENDCALL_BTN_BG_T;
				rel2.relative: ENDCALL_BTN_BG_R ENDCALL_BTN_BG_B;
				color: 255 255 255 255;
			}
		}

		part { name: PART_END_BTN;
			type: SWALLOW;
			scale: 1;
			description {
				state: "default" 0.0;
				rel1 {
					relative: ENDCALL_BTN_L ENDCALL_BTN_T;
					to: "end_btn_area";
				}
				rel2 {
					relative: ENDCALL_BTN_R ENDCALL_BTN_B;
					to: "end_btn_area";
				}
			}
		}
 	}

	programs {
		program { name: "show_keypadbtn_no_effect";
			signal: "SHOW";
			source: "KEYPAD_BTN";
			action: STATE_SET "hide" 0.0;
			target: "caller_info";
		}
		program { name: "hide_keypadbtn";
			signal: "HIDE";
			source: "KEYPAD_BTN";
			action: STATE_SET "default" 0.0;
			target: "caller_info";
		}

		program {
			name: "set_portrait";
			signal: "set_portrait";
			source: "incall_layout";
			in: 0.0 0.0;
			action: STATE_SET "default" 0.0;
			target: "background";
			target: "caller_info";
		}
	}
}
