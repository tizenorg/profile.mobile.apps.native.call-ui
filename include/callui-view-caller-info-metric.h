/*
 * Copyright (c) 2009-2015 Samsung Electronics Co., Ltd All Rights Reserved
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

#ifndef _CALLUI_CALLER_INFO_METRIC_H_
#define _CALLUI_CALLER_INFO_METRIC_H_

//One hold in conference layout
#define ONE_HOLD_H							(730)
#define ONE_HOLD_B							REL_HD_H(ONE_HOLD_H)

//Indicator
#define INDICATOR_HEIGHT					50
#define INDICATOR_B							(INDICATOR_HEIGHT/ONE_HOLD_H)

//Caller info layout
#define CALLER_INF_LAYOUT_OFFSET			10
#define CALLER_INF_LAYOUT_B_OFFSET			62
#define CALLER_INF_LAYOUT_H					248
#define CALLER_INF_LAYOUT_W					700

//Hold info
#define HOLD_LAYOUT_L						REL_HD_W(CALLER_INF_LAYOUT_OFFSET)
#define HOLD_LAYOUT_T						(INDICATOR_B+(CALLER_INF_LAYOUT_OFFSET/ONE_HOLD_H))
#define HOLD_LAYOUT_R						(1-REL_HD_W(CALLER_INF_LAYOUT_OFFSET))
#define HOLD_LAYOUT_B						(HOLD_LAYOUT_T+(CALLER_INF_LAYOUT_H/ONE_HOLD_H))

//Caller info
#define CALLER_INF_L_OFFSET					22
#define CALLER_INF_T_OFFSET					10
#define CALLER_INF_R_OFFSET					22
#define CALLER_INF_B_OFFSET					30
#define CALLER_INF_ID_T_OFFSET				16
#define CALLER_INF_TEXT_L_OFFSET			32
#define CALLER_INF_SUBTEXT_T_OFFSET			6

#define CALLER_INF_STATUS_H					54
#define CALLER_INF_ID_SIZE					138
#define CALLER_INF_MAIN_TEXT_H				76

#define CALLER_INF_L						(CALLER_INF_L_OFFSET/CALLER_INF_LAYOUT_W)

#define CALLER_INF_STATUS_T					(CALLER_INF_T_OFFSET/CALLER_INF_LAYOUT_H)
#define CALLER_INF_STATUS_R					((CALLER_INF_L_OFFSET+CALLER_INF_ID_SIZE+CALLER_INF_TEXT_L_OFFSET)/CALLER_INF_LAYOUT_W)
#define CALLER_INF_STATUS_B					((CALLER_INF_T_OFFSET+CALLER_INF_STATUS_H)/CALLER_INF_LAYOUT_H)

#define CALLER_INF_ID_T						((CALLER_INF_T_OFFSET+CALLER_INF_STATUS_H+CALLER_INF_ID_T_OFFSET)/CALLER_INF_LAYOUT_H)
#define CALLER_INF_ID_R						((CALLER_INF_L_OFFSET+CALLER_INF_ID_SIZE)/CALLER_INF_LAYOUT_W)
#define CALLER_INF_ID_B						((CALLER_INF_T_OFFSET+CALLER_INF_STATUS_H+CALLER_INF_ID_SIZE)/CALLER_INF_LAYOUT_H)

#define CALLER_INF_TEXT_L					((CALLER_INF_L+CALLER_INF_ID_SIZE+CALLER_INF_TEXT_L_OFFSET)/CALLER_INF_LAYOUT_W)
#define CALLER_INF_SUBTEXT_T				((CALLER_INF_T_OFFSET+CALLER_INF_STATUS_H+CALLER_INF_ID_T_OFFSET+CALLER_INF_MAIN_TEXT_H+CALLER_INF_SUBTEXT_T_OFFSET)/CALLER_INF_LAYOUT_H)

//Merge and swap buttons
#define MERGE_SWAP_BTN_W					350
#define MERGE_SWAP_BTN_H					122

#define MERGE_SWAP_BTN_T					HOLD_LAYOUT_B
#define MERGE_SWAP_BTN_B					(MERGE_SWAP_BTN_T+(MERGE_SWAP_BTN_H/ONE_HOLD_H))

#define MERGE_BTN_L							REL_HD_W(CALLER_INF_LAYOUT_OFFSET)
#define MERGE_BTN_R							REL_HD_W(CALLER_INF_LAYOUT_OFFSET+MERGE_SWAP_BTN_W)

#define SWAP_BTN_L							REL_HD_W(CALLER_INF_LAYOUT_OFFSET+MERGE_SWAP_BTN_W)
#define SWAP_BTN_R							(1- REL_HD_W(CALLER_INF_LAYOUT_OFFSET))

//Merge and swap buttons content
#define MS_BTN_ICON_T_OFFSET				10

#define MS_BTN_ICON_W						54
#define MS_BTN_ICON_H						48

#define MS_BTN_ICON_L						(((MERGE_SWAP_BTN_W/2)-(MS_BTN_ICON_W/2))/MERGE_SWAP_BTN_W)
#define MS_BTN_ICON_T						(MS_BTN_ICON_T_OFFSET/MERGE_SWAP_BTN_H)
#define MS_BTN_ICON_R						(((MERGE_SWAP_BTN_W/2)+(MS_BTN_ICON_W/2))/MERGE_SWAP_BTN_W)
#define MS_BTN_ICON_B						((MS_BTN_ICON_T_OFFSET+MS_BTN_ICON_H)/MERGE_SWAP_BTN_H)

#define MS_BTN_TEXT_B						((MERGE_SWAP_BTN_H-MS_BTN_ICON_T_OFFSET)/MERGE_SWAP_BTN_H)

//Active Info
#define ACTIVE_INFO_LAYOUT_T_OFFSET			8

#define ACTIVE_INFO_L						REL_HD_W(CALLER_INF_LAYOUT_OFFSET)
#define ACTIVE_INFO_T						(MERGE_SWAP_BTN_B+(ACTIVE_INFO_LAYOUT_T_OFFSET/ONE_HOLD_H))
#define ACTIVE_INFO_R						(1-REL_HD_W(CALLER_INF_LAYOUT_OFFSET))
#define ACTIVE_INFO_B						(ACTIVE_INFO_T+(CALLER_INF_LAYOUT_H/ONE_HOLD_H))

//Arrow
#define ARROW_R_OFFSET						12
#define ARROW_B_OFFSET						68

#define ARROW_SIZE							50

#define ARROW_L								(1-((ARROW_SIZE+ARROW_R_OFFSET)/CALLER_INF_LAYOUT_W))
#define ARROW_T								(1-((ARROW_SIZE+ARROW_B_OFFSET)/CALLER_INF_LAYOUT_H))
#define ARROW_R								(1-(ARROW_R_OFFSET/CALLER_INF_LAYOUT_W))
#define ARROW_B								(1-(ARROW_B_OFFSET/CALLER_INF_LAYOUT_H))

//Six button
#define SIX_BUTTON_LAYOUT_H					376

#define SIX_BUTTON_LAYOUT_T					(ONE_HOLD_B)
#define SIX_BUTTON_LAYOUT_B					(SIX_BUTTON_LAYOUT_T+REL_HD_H(SIX_BUTTON_LAYOUT_H))

//Action panel
#define ACTION_PANEL_H						152

//End button
#define END_BUTTON_SIZE						104
#define END_BUTTON_X_OFFSET					308
#define END_BUTTON_Y_OFFSET					((ACTION_PANEL_H-END_BUTTON_SIZE)/2)

#define END_BUTTON_L						REL_HD_W(END_BUTTON_X_OFFSET)
#define END_BUTTON_T						(END_BUTTON_Y_OFFSET/ACTION_PANEL_H)
#define END_BUTTON_R						(1-REL_HD_W(END_BUTTON_X_OFFSET))
#define END_BUTTON_B						(1-(END_BUTTON_Y_OFFSET/ACTION_PANEL_H))

#endif //_CALLUI_CALLER_INFO_METRIC_H_
